name: Rust

on:
  push:
    branches: [ "main" ]
    tags: "v*"
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Debug Build
        run: cargo build --verbose

      - name: Run tests
        run: |
            export RUST_BACKTRACE=1
            cargo test

      - name: Release Build
        run: cargo build --verbose --release --all-features

      - name: Set Vars
        id: vars
        run: |
          echo "arch=$(arch)" >> "$GITHUB_OUTPUT"
          echo "os=$(echo `uname` | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"

      - name: "Bundle ${{ steps.vars.outputs.os }} ${{ steps.vars.outputs.arch }}"
        run: |
            cp target/release/vmp vmp
            tar -czvf vmp-${{ steps.vars.outputs.os }}-${{ steps.vars.outputs.arch }}.tar.gz vmp

      - name: Upload VMP Packages
        uses: actions/upload-artifact@v4
        with:
          name: vmp.${{ steps.vars.outputs.os }}.${{ steps.vars.outputs.arch }}
          path: vmp*.tar.gz

  release:
    name: "Tagged Release"
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download VMP Packages
        id: download-vmp
        uses: actions/download-artifact@v4
        with:
          path: vmp
          pattern: vmp.*
          merge-multiple: true

      - name: List Files
        run: ls -R ${{ steps.download-vmp.outputs.download-path }}

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            ${{ steps.download-vmp.outputs.download-path }}/*.tar.gz
