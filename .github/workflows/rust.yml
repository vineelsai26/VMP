name: Rust

on:
  push:
    branches: [ "main" ]
    tags: "v*"
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  release:
    name: "Tagged Release"
    runs-on: "ubuntu-latest"
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4

      - name: Install zip
        run: sudo apt install libssl-dev

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features

      - name: "Bundle Linux AMD64"
        run: |
            cp target/release/vmp vmp
            tar -czvf vmp-linux-amd64.tar.gz vmp

      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --all-features --target aarch64-unknown-linux-gnu

      - name: "Bundle Linux ARM64"
        run: |
            cp target/release/vmp vmp
            tar -czvf vmp-linux-arm64.tar.gz vmp

      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --all-features --target aarch64-apple-darwin

      - name: "Bundle Apple ARM64"
        run: |
            cp target/release/vmp vmp
            tar -czvf vmp-darwin-arm64.tar.gz vmp

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            *.tar.gz
